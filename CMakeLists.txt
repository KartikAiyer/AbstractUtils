cmake_minimum_required( VERSION 3.0.0 )
project( AbstractUtils C )

set( INTERFACE ${PROJECT_SOURCE_DIR}/Interface )
set( DEFAULT_IMPL ${PROJECT_SOURCE_DIR}/DefaultImplementations )
set( UTILS ${PROJECT_SOURCE_DIR}/Utils )

include_directories( ${INTERFACE} )
include_directories( ${DEFAULT_IMPL} )
include_directories( ${UTILS} )

file( GLOB DEF_SOURCES ${DEFAULT_IMPL}/*.c ${DEFAULT_IMPL}/*.h )
file( GLOB INTERFACE_SOURCES ${INTERFACE}/*.h ${INTERFACE}/*.c )
file( GLOB UTIL_SOURCES ${UTILS}/*.c ${UTILS}/*.h )

set(SOURCES ${INTERFACE_SOURCES} ${DEF_SOURCES} ${UTIL_SOURCES} )
if( WIN32 )
  #By default we use the FreeRTOS, windows port here.
  set( HOSTOS_PORT true CACHE BOOL "FreeRtos uses native OS port as platform" )
  add_subdirectory( ${PROJECT_SOURCE_DIR}/ThirdParty/FreeRtos )
  set( FREE_RTOS_INTERFACE ${PROJECT_SOURCE_DIR}/FreeRtosInterface )
  include_directories( ${FREE_RTOS_INTERFACE} )
  MESSAGE( ${FRTOS_INCLUDE_PATH} )
  include_directories( ${FRTOS_INCLUDE_PATH} )
  file( GLOB FREE_RTOS_INTERFACE_SOURCE ${FREE_RTOS_INTERFACE}/*.c ${FREE_RTOS_INTERFACE}/*.h )
  list( APPEND SOURCES ${FREE_RTOS_INTERFACE_SOURCE} )
  set( CONFIG_USE_AUTILS_LOG_SYSTEM "CONFIG_DISABLE" CACHE STRING "Use the port agnostic Log System log buffer factory" )
else( WIN32 )
  #TODO: Enable FreeRTOS in linux. For now uses Posix which is broken on linux
  set( POSIX_INTERFACE ${PROJECT_SOURCE_DIR}/PosixInterface )
  include_directories( ${POSIX_INTERFACE} )
  file( GLOB POSIX_SOURCES ${POSIX_INTERFACE}/*.c ${POSIX_INTERFACE}/*.h )
  if( ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
    find_package( Threads )
    add_definitions( -D_GNU_SOURCE -DLINUX_PTHREAD )
  endif( ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
  list( APPEND SOURCES ${POSIX_SOURCES} )
endif( WIN32 )

#Forcing 32-bit compilation
if ( NOT WIN32 )
	set( CMAKE_C_FLAGS -m32 )
	set( CMAKE_EXE_LINKER_FLAGS -m32 )
endif( NOT WIN32 )

set( LOG_MAX_LINE_LENGTH "512" CACHE STRING "The maximum length of the resulting string that can processed by a call to SystemLog()")
set( SYSTEM_LOG_BUFFER_SIZE "1 << 11" CACHE STRING "The Size of the in memory System Log Buffer (default 2K)" )
set( LOG_POOL_MAX_LOG_BUFFERS "10" CACHE STRING "The total number of LogBuffers that are available in the LogBufferPool" )
set( LOG_POOL_LOG_BUFFER_SIZE "1 << 12" CACHE STRING "The size in bytes of each LogBuffer" )
set( CONFIG_POOL_ALLOCATION_LOGS "CONFIG_DISABLE" CACHE STRING "Enable granular logging in Pool API")
configure_file( ${PROJECT_SOURCE_DIR}/AbstractUtilsConfig.h.in ${PROJECT_BINARY_DIR}/AbstractUtilsConfig.h )
include_directories( ${PROJECT_BINARY_DIR} )

add_library( AbstractUtils STATIC ${SOURCES} )
if( ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
  target_link_libraries( AbstractUtils ${CMAKE_THREAD_LIBS_INIT} )
elseif( WIN32 )
  target_link_libraries( AbstractUtils FreeRTOS )
  include_directories( ${PROJECT_SOURCE_DIR}/ThirdParty/FreeRtos )
  get_property( TARGET_INCLUDES TARGET AbstractUtils PROPERTY INCLUDE_DIRECTORIES )
  MESSAGE( ${TARGET_INCLUDES} )
endif()

add_subdirectory(${PROJECT_SOURCE_DIR}/Tests)
